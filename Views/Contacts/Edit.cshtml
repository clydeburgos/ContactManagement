@model ContactManagement.Models.Contact

@{
    ViewData["Title"] = "Edit";
}
<h1>Edit</h1>
<h4>Contact</h4>
<br />
<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="edit-contact-form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" id="Id" name="Id" />
            <div class="form-group">
                <label for="FirstName" class="control-label">First Name</label>
                <input id="FirstName" name="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="LastName" class="control-label">Last Name</label>
                <input id="LastName" name="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Email" class="control-label">Email</label>
                <input id="Email" name="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="PhoneNumber" class="control-label">Phone Number</label>
                <input id="PhoneNumber" name="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Address" class="control-label">Address</label>
                <input id="Address" name="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" /> | 
                <a href="/Contacts/Delete/@Model?.Id" class="btn btn-danger">Delete Contact</a>
            </div>
        </form>
    </div>
    <div class="col-md-8">
        <div id="map" style="height: 400px; width: 100%;"></div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var contactId = @Model?.Id;
            var map;
            var marker;
            var autocomplete;
            var geocoder = new google.maps.Geocoder();

            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 8
            });


            autocomplete = new google.maps.places.Autocomplete(
                document.getElementById('Address'),
                { types: ['geocode'] }
            );

            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    alert("No details available for input: '" + place.name + "'");
                    return;
                }

                if (marker) {
                    marker.setMap(null);
                }

                marker = new google.maps.Marker({
                    position: place.geometry.location,
                    map: map
                });

                map.setCenter(place.geometry.location);
                map.setZoom(15);
            });

            $.ajax({
                url: '@Url.Action("GetContactDetails", "Contacts")',
                type: 'GET',
                data: { id: contactId },
                success: function (data) {
                    $('#Id').val(data.id);
                    $('#FirstName').val(data.firstName);
                    $('#LastName').val(data.lastName);
                    $('#Email').val(data.email);
                    $('#PhoneNumber').val(data.phoneNumber);
                    $('#Address').val(data.address);

                    if (data.address) {
                        geocodeAddress(data.address);
                    }

                },
                error: function (xhr, status, error) {
                    console.error("Error fetching contact details: ", error);
                }
            });


            $('#edit-contact-form').submit(function (e) {
                e.preventDefault();
                var formData = $(this).serialize();
                $.ajax({
                    url: '@Url.Action("Update", "Contacts")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        window.location.href = '@Url.Action("Index", "Contacts")';
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating contact: ", error);
                    }
                });
            });

            function geocodeAddress(address) {
                geocoder.geocode({ 'address': address }, function (results, status) {
                    if (status === 'OK') {
                        map.setCenter(results[0].geometry.location);
                        if (marker) {
                            marker.setMap(null);
                        }
                        marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location
                        });
                        map.setZoom(15);
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }
        });
    </script>
}